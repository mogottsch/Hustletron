const keyCodeMap = {
  // 3: 'break',
  8: 'Backspace',
  9: 'Tab',
  // 12: 'clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  // 21: 'hangul',
  // 25: 'hanja',
  27: 'Escape',
  // 28: 'conversion',
  // 29: 'non-conversion',
  32: 'Space',
  33: 'PgUp',
  34: 'PgDn',
  35: 'End',
  36: 'Home',
  37: 'Left',
  38: 'Up',
  39: 'Right',
  40: 'Down',
  // 41: 'select',
  // 42: 'PrtSc',
  // 43: 'execute',
  44: 'PrtSc',
  45: 'Insert ',
  46: 'Delete',
  // 47: 'help',
  48: '0',
  49: '1',
  50: '2',
  51: '3',
  52: '4',
  53: '5',
  54: '6',
  55: '7',
  56: '8',
  57: '9',
  // 58: ':',
  59: '`;',
  // 60: '&lt;',
  // 61: 'equals (firefox)',
  63: '`ß',
  // 64: '@ (firefox)',
  65: 'a',
  66: 'b',
  67: 'c',
  68: 'd',
  69: 'e',
  70: 'f',
  71: 'g',
  72: 'h',
  73: 'i',
  74: 'j',
  75: 'k',
  76: 'l',
  77: 'm',
  78: 'n',
  79: 'o',
  80: 'p',
  81: 'q',
  82: 'r',
  83: 's',
  84: 't',
  85: 'u',
  86: 'v',
  87: 'w',
  88: 'x',
  89: 'y',
  90: 'z',
  91: 'LWin',
  92: 'RWin',
  93: 'RWin',
  // 95: 'sleep',
  96: 'Numpad0',
  97: 'Numpad1',
  98: 'Numpad2',
  99: 'Numpad3',
  100: 'Numpad4',
  101: 'Numpad5',
  102: 'Numpad6',
  103: 'Numpad7',
  104: 'Numpad8',
  105: 'Numpad9',
  106: 'NumpadMult',
  107: 'NumpadAdd',
  108: 'NumpadDot',
  109: 'NumpadSub',
  110: 'NumpadDot',
  111: 'NumpadDiv',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  124: 'F13',
  125: 'F14',
  126: 'F15',
  127: 'F16',
  128: 'F17',
  129: 'F18',
  130: 'F19',
  131: 'F20',
  132: 'F21',
  133: 'F22',
  134: 'F23',
  135: 'F24',
  // 136: 'f25',
  // 137: 'f26',
  // 138: 'f27',
  // 139: 'f28',
  // 140: 'f29',
  // 141: 'f30',
  // 142: 'f31',
  // 143: 'f32',
  // 144: 'num lock',
  145: 'ScrollLock',
  // 151: 'airplane mode',
  160: '^',
  161: '!',
  // 162: '؛ (arabic semicolon)',
  163: '#',
  // 164: '$',
  // 165: 'ù',
  166: 'Browser_Back',
  167: 'Browser_Forward',
  168: 'Browser_Refresh',
  // 169: 'closing paren (AZERTY)',
  // 170: '*',
  // 171: '~ + * key',
  172: 'Browser_Home',
  // 173: 'minus (firefox), mute/unmute',
  174: 'Volume_Up',
  175: 'Volume_Down',
  176: 'Media_Next',
  177: 'Media_Prev',
  178: 'Media_Stop',
  179: 'Media_Play_Pause',
  180: 'Launch_Mail',
  181: 'Volume_Mute',
  182: 'Volume_Down',
  183: 'Volume_Up',
  // 186: 'semi-colon / ñ',
  // 187: 'equal sign',
  188: '`,',
  // 189: 'dash',
  190: '.',
  191: '/',
  // 192: 'grave accent / ñ / æ / ö',
  // 193: '`?',
  // 194: 'numpad period (chrome)',
  // 219: 'open bracket',
  220: '\\',
  221: 'close bracket / å',
  222: "'",
  223: '`',
  // 224: 'left or right ⌘ key (firefox)',
  225: '<^>!',
  // 226: '&lt; /git &gt;, left back slash',
  // 230: 'GNOME Compose Key',
  // 231: 'ç',
  // 233: 'XF86Forward',
  // 234: 'XF86Back',
  // 235: 'non-conversion',
  // 240: 'alphanumeric',
  // 242: 'hiragana/katakana',
  // 243: 'half-width/full-width',
  // 244: 'kanji',
  // 251: 'unlock trackpad (Chrome/Edge)',
  // 255: 'toggle touchpad',
};

const modifierMap = {
  LWin: '#',
  RWin: '#',
  Alt: '!',
  Control: '^',
  Shift: '+',
};

const getModifier = (ahkKey: string) => {
  if (!(ahkKey in modifierMap)) {
    throw new Error('Unknown modifier key');
  }
  return modifierMap[ahkKey as keyof typeof modifierMap];
};

const getAhkKey = (keyCode: number) => {
  if (!(keyCode in keyCodeMap)) {
    throw new Error('Unknown key');
  }

  return keyCodeMap[keyCode as keyof typeof keyCodeMap];
};

export { keyCodeMap, getAhkKey, getModifier, modifierMap };
